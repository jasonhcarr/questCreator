!function(){"use strict";angular.module("questCreator",["ui.router","LocalStorageModule"]).config(function(a,b){b.otherwise("/"),a.state("main",{abstract:!0,url:"/",templateUrl:"./src/views/main.html",controller:"mainCtrl as main"}).state("main.landing",{url:"",templateUrl:"./src/views/landing.html",controller:"landingCtrl as landing"}).state("main.game",{url:"game",templateUrl:"./src/views/game.html",controller:"gameCtrl as game"}).state("main.game.detail",{url:"/detail",templateUrl:"./src/views/game/detail.html",controller:"detailCtrl as detail"}).state("main.game.play",{url:"/play",templateUrl:"./src/views/game/play.html",controller:"playCtrl as play"}).state("main.game.editor",{abstract:!0,url:"/editor",templateUrl:"./src/views/game/editor.html",controller:"editorCtrl as editor"}).state("main.game.editor.views",{url:"/",views:{palette:{templateUrl:"./src/views/game/editor/palette.html",controller:"paletteCtrl as palette"},maps:{templateUrl:"./src/views/game/editor/map.html",controller:"mapCtrl as map"},scenes:{templateUrl:"./src/views/game/editor/scene.html",controller:"sceneCtrl as scene"},backgrounds:{templateUrl:"./src/views/game/editor/bg.html",controller:"bgCtrl as bg"},objects:{templateUrl:"./src/views/game/editor/obj.html",controller:"objCtrl as obj"},entities:{templateUrl:"./src/views/game/editor/ent.html",controller:"entCtrl as ent"},scripts:{templateUrl:"./src/views/game/editor/scripts.html",controller:"scriptsCtrl as scripts"}}}).state("main.profile",{url:"profile",templateUrl:"./src/views/profile.html",controller:"profileCtrl as profile"})})}(),angular.module("questCreator").filter("capitalize",function(){return function(a){return a=a||"",a.replace(/\w\S*/g,function(a){return a.charAt(0).toUpperCase()+a.substr(1).toLowerCase()})}}),angular.module("questCreator").filter("nospace",function(){return function(a){return a?a.replace(/ /g,""):""}}),angular.module("questCreator").factory("Avatar",function(){function a(a){this.name=a.name,this.info=a.info,this.user_id=a.user_id,this.current=a.current,this.action="stand"}return a.prototype.updatePos=function(){this.info.pos.x+=this.info.speed.x,this.info.pos.y+=this.info.speed.y},a.prototype.stop=function(){this.action="stand",this.info.speed.x=0,this.info.speed.y=0},a.prototype.collide=function(a){switch(this.stop(),a){case"left":this.info.pos.x+=this.info.speed.mag;break;case"right":this.info.pos.x-=this.info.speed.mag;break;case"up":this.info.pos.y+=this.info.speed.mag;break;case"down":this.info.pos.y-=this.info.speed.mag}},a}),angular.module("questCreator").factory("Background",function(){function a(a){this.name=a.name,this.obj=a.obj,this.game_id=a.game_id}return a}),angular.module("questCreator").factory("Entity",function(){function a(a){this.name=a.name,this.game_id=a.game_id,this.action="walkLeft",this.info=a.info,this.info.speed={mag:3,x:0,y:0},this.info.currentFrameIndex=0,this.info.currentFrame=this.info.animate[this.action][this.info.currentFrameIndex],this.animateDelay=20,this.animateTime=0}return a.prototype.updatePos=function(){this.info.pos.x+=this.info.speed.x,this.info.pos.y+=this.info.speed.y},a.prototype.checkAction=function(){var a=this;if(a.animateTime>a.animateDelay){if("stand"===a.action||"walkLeft"===a.action||"walkUp"===a.action||"walkRight"===a.action||"walkDown"===a.action){switch(a.action){case"walkLeft":a.info.speed.x=-a.info.speed.mag,a.info.speed.y=0;break;case"walkUp":a.info.speed.x=0,a.info.speed.y=-a.info.speed.mag;break;case"walkRight":a.info.speed.x=a.info.speed.mag,a.info.speed.y=0;break;case"walkDown":a.info.speed.x=0,a.info.speed.y=a.info.speed.mag}a.info.currentFrame=a.info.animate[a.action][a.info.currentFrameIndex],a.info.currentFrameIndex++,a.info.currentFrameIndex>a.info.animate[a.action].length-1&&(a.info.currentFrameIndex=0)}a.animateTime=0}a.animateTime++},a.prototype.stop=function(){this.action="walkRight",this.info.speed.x=0,this.info.speed.y=0},a.prototype.wander=function(){this.info.speed.x=0,this.info.speed.y=0;var a=Math.floor(4*Math.random());switch(a){case 0:this.action="walkLeft";break;case 1:this.action="walkRight";break;case 2:this.action="walkUp";break;case 3:this.action="walkDown"}},a.prototype.collide=function(a){switch(this.wander(),a){case"left":this.info.pos.x+=this.info.speed.mag;break;case"right":this.info.pos.x-=this.info.speed.mag;break;case"up":this.info.pos.y+=this.info.speed.mag;break;case"down":this.info.pos.y-=this.info.speed.mag}},a}),angular.module("questCreator").factory("Game",function(){function a(a){this.name=a,this.maps=[],this.scenes=[],this.backgrounds=[],this.sceneObjects=[],this.entities=[]}return a}),angular.module("questCreator").factory("Map",function(){function a(a){this.name=a,this.scenes=[]}return a}),angular.module("questCreator").factory("PopupFactory",function(a){function b(b,c,d){var e=$("<popup>").attr({"popup-title":'"'+c+'"'}).append(b);e=a(e)(d),$(e).prependTo("body")}return{new:b}}),angular.module("questCreator").factory("Scene",function(){function a(a){this.name=a,this.backgrounds=[],this.sceneObjects=[],this.entities=[]}return a}),angular.module("questCreator").factory("SceneObject",function(){function a(a){this.name=a.name,this.obj=a.obj,this.game_id=a.game_id,this.action="none",this.allActions=[]}return a}),angular.module("questCreator").directive("blurOnEnter",function(){return{link:function(a,b,c){b.bind("keypress",function(a){console.log("in directive"),13===a.which&&(console.log("blurrin"),b.blur(),a.preventDefault())})}}}),angular.module("questCreator").directive("popup",function(){return{scope:{title:"=popupTitle",kill:"@"},replace:!0,transclude:!0,link:function(a,b,c){a.kill=function(){$("#overlay").remove()}},templateUrl:"./src/views/popup.html",controller:function(a){a.killPopUp=function(){a.kill()}}}}),angular.module("questCreator").service("EditorService",function(a,b){function c(a,b){p={image:a,collision:b}}function d(a){return"image"===a?p.image:"collision"===a?p.collision:void 0}function e(a){var b={name:a.toLowerCase()};return $.ajax({method:"GET",url:"https://forge-api.herokuapp.com/games/load",data:b,success:function(a){return a},error:function(a){alert("There was a problem loading this game")}})}function f(b){var c={user_id:a.get().id,token:a.get().token},d={game_id:b};return $.ajax({method:"GET",url:"https://forge-api.herokuapp.com/articles/game/all",headers:c,data:d,success:function(a){return a},error:function(a){console.log(a)}})}function g(c){var d={user_id:a.get().id,token:a.get().token},e={name:"Title Screen",pos:[0,0,0],background:null,objects:[],entities:[]},f={name:"Title Map",scenes:[[e]]},g={name:c,description:"",tags:[],info:{maps:[f]}};return $.ajax({method:"POST",url:"https://forge-api.herokuapp.com/games/create",data:JSON.stringify(g),headers:d,dataType:"json",contentType:"application/json",success:function(a){return g=a,j("Title Screen",g.id),h(g.id).done(function(a){console.log(a)}),g},error:function(a){alert("There was a problem creating this game. Please try again."),b.go("main.landing")}})}function h(b){var c={user_id:a.get().id,token:a.get().token},d={game_id:b};return $.ajax({method:"POST",url:"https://forge-api.herokuapp.com/collaborators/self",headers:c,data:d,success:function(a){return a},error:function(a){console.log(a)}})}function i(b){var c={name:b.name,id:b.id,tags:b.tags,description:b.description,info:b.info,published:!0,thumbnail:b.info.maps[0].scenes[0][0].background.thumbnail||null};console.log(c);var d={user_id:a.get().id,token:a.get().token};return $.ajax({method:"PUT",url:"https://forge-api.herokuapp.com/games/update",headers:d,data:JSON.stringify(c),dataType:"json",contentType:"application/json",success:function(a){return a},error:function(a){console.log(a)}})}function j(b,c){var d={user_id:a.get().id,token:a.get().token},e={image:[],collisionMap:[]},f={name:b,info:e,tags:[],published:!0,game_id:c};return $.ajax({method:"POST",url:"https://forge-api.herokuapp.com/backgrounds/create",headers:d,data:JSON.stringify(f),dataType:"json",contentType:"application/json",success:function(a){return a},error:function(a){console.log(a)}})}function k(b,c,d,e){d.info.image=b,d.info.collisionMap=c,d.thumbnail=e;var f={user_id:a.get().id,token:a.get().token};return $.ajax({method:"PUT",url:"https://forge-api.herokuapp.com/backgrounds/update",headers:f,data:JSON.stringify(d),dataType:"json",contentType:"application/json",success:function(a){return a},error:function(a){console.log(a)}})}function l(b,c){var d={user_id:a.get().id,token:a.get().token},e={pos:{x:350,y:250},image:[],collisionMap:[]},f={name:b,info:e,tags:[],published:!1,game_id:c};return $.ajax({method:"POST",url:"https://forge-api.herokuapp.com/obstacles/create",headers:d,data:JSON.stringify(f),dataType:"json",contentType:"application/json",success:function(a){return a},error:function(a){console.log(a)}})}function m(b,c,d,e){d.info.image=b,d.info.collisionMap=c,d.thumbnail=e;var f={user_id:a.get().id,token:a.get().token};return $.ajax({method:"PUT",url:"https://forge-api.herokuapp.com/obstacles/update",headers:f,data:JSON.stringify(d),dataType:"json",contentType:"application/json",success:function(a){return a},error:function(a){console.log(a)}})}function n(b,c){var d={user_id:a.get().id,token:a.get().token},e={pos:{x:350,y:250},animate:{walkLeft:[{image:[],collisionMap:[]},{image:[],collisionMap:[]},{image:[],collisionMap:[]}],walkRight:[{image:[],collisionMap:[]},{image:[],collisionMap:[]},{image:[],collisionMap:[]}],walkUp:[{image:[],collisionMap:[]},{image:[],collisionMap:[]},{image:[],collisionMap:[]}],walkDown:[{image:[],collisionMap:[]},{image:[],collisionMap:[]},{image:[],collisionMap:[]}]}},f={name:b,info:e,tags:[],published:!1,game_id:c};return $.ajax({method:"POST",url:"https://forge-api.herokuapp.com/entities/create",headers:d,data:JSON.stringify(f),dataType:"json",contentType:"application/json",success:function(a){return a},error:function(a){console.log(a)}})}function o(b,c,d,e,f,g){d.info.animate[e][f].image=b,d.info.animate[e][f].collisionMap=c,d.thumbnail=g,d.published=!0;var h={user_id:a.get().id,token:a.get().token};return $.ajax({method:"PUT",url:"https://forge-api.herokuapp.com/entities/update",headers:h,data:JSON.stringify(d),dataType:"json",contentType:"application/json",success:function(a){return a},error:function(a){console.log(a)}})}var p={image:[],collision:[]};return{getGame:e,getGameAssets:f,createGame:g,saveGame:i,createBackground:j,saveBackground:k,createObject:l,saveObject:m,createEntity:n,saveEntity:o,copy:c,paste:d}}),angular.module("questCreator").service("GameService",function(){function a(a){var b={name:a.toLowerCase()};return $.ajax({method:"GET",url:"https://forge-api.herokuapp.com/games/load",data:b,success:function(a){return a},error:function(a){alert("There was a problem loading this game")}})}function b(){return $.ajax({method:"GET",url:"https://forge-api.herokuapp.com/games/all",contentType:"application/json",success:function(a){return a},error:function(a){alert("There was a problem loading the games")}})}function c(){return f}function d(a){f=a}function e(a){return $.ajax({method:"GET",url:"https://forge-api.herokuapp.com/games/search",data:{name:a},success:function(a){return console.log(a),a},error:function(a){alert("There was a problem loading the games")}})}var f={};return{loadGame:a,getGameDetail:c,setGameDetail:d,getGames:b,searchGames:e}}),angular.module("questCreator").service("PaletteService",function(a){function b(){return h}function c(){return g}function d(){$.ajax({method:"GET",url:"https://forge-api.herokuapp.com/articles/index",contentType:"application/json",success:function(a){return a},error:function(a){alert("There was a problem loading the assets")}})}function e(a){return g=a,$.ajax({method:"GET",url:"https://forge-api.herokuapp.com/"+a+"/all",headers:i,success:function(a){return h=a},error:function(a){alert("There was a problem loading the "+g+".")}})}function f(a){return $.ajax({method:"GET",url:"https://forge-api.herokuapp.com/"+g+"/search",headers:i,data:{name:a},success:function(a){return h=a},error:function(b){alert("There was a problem loading the "+g+"s matching your search for "+a)}})}var g="",h=null,i={user_id:a.get().id,token:a.get().token};return{getCurrent:b,getCurrentType:c,getAll:d,getByType:e,getByTag:f}}),angular.module("questCreator").service("PopupService",function(a,b,c){function d(a,d){d=d||c.$$childHead;var e=f+g[a].content,h=$("<ng-include>").attr("src","'"+e+"'");b.new(h,g[a].title,d)}function e(){$("#overlay").remove()}var f="./src/views/popups/",g={welcome:{title:"Welcome!",content:"welcome.html"},"user-register":{title:"Hey, you're new!",content:"user-register.html"},"edit-game":{title:"Awesome! Now you're editing:",content:"edit-game.html"},"create-game":{title:"Name your game:",content:"create-game.html"}};return{open:d,close:e}}),angular.module("questCreator").service("socket",function(){var a=io();return{on:function(b,c){a.on(b,c)},emit:function(b,c){a.emit(b,c)},off:function(b,c){a.off(b,c)}}}),angular.module("questCreator").service("UserService",function(a){function b(){return new Promise(function(a,b){var c=setInterval(function(){A&&(a(!0),clearInterval(c))},20)})}function c(){return z}function d(a){z=a}function e(a){z.editGame=a}function f(){return z.editGame||null}function g(a){$.ajax({method:"DELETE",url:"https://forge-api.herokuapp.com/games/archive",data:{id:a},headers:{user_id:z.id,token:z.token},success:function(a){alert('Your game has been archived. If you ever want to see it again, click "Archived Games" below the list of your games. Carry on.')},error:function(a){alert("There was a problem archiving this game. Please try again.")}})}function h(){gapi.client.setApiKey(x),gapi.auth2.init({client_id:y,scope:"profile"}).then(function(){w=gapi.auth2.getAuthInstance(),console.log("Session authorized"),w.isSignedIn.listen(i),i(w.isSignedIn.get())})}function i(a){a?($("#login").hide(),$("#logout").show(),console.log("Signed In!"),l()):($("#login").show(),$("#logout").hide(),console.log("Signed Out!"))}function j(){w.signIn({prompt:"login"})}function k(){w.signOut()}function l(){var b=gapi.client.request({path:"https://people.googleapis.com/v1/people/me",method:"GET"});b.then(function(b){z.picture=b.result.photos[0].url,z.uid=w.currentUser.Ab.El,z.token=w.currentUser.Ab.Zi.access_token,$.ajax({method:"PATCH",url:"https://forge-api.herokuapp.com/users/login",data:{uid:z.uid,token:z.token},success:function(b){z.joined=b.created_at,z.username=b.username,z.id=b.id,a.open("welcome"),A=!0},error:function(b){404===b.status?a.open("user-register"):0===b.status||(alert("There was a problem logging in. Please try again"),k())}})})}function m(b){z.username=b,$.ajax({method:"POST",url:"https://forge-api.herokuapp.com/users/create",data:{username:z.username,uid:z.uid,token:z.token},success:function(b){z.id=b.id,a.open("user-register")},error:function(a){alert("There was a problem logging in. Please try again"),k()}})}function n(){return $.ajax({method:"GET",url:"https://forge-api.herokuapp.com/games/user-games",headers:{user_id:z.id,token:z.token},success:function(a){return a},error:function(a){alert("There was a problem loading the profile. Please try again.")}})}function o(a){return $.ajax({method:"GET",url:"https://forge-api.herokuapp.com/collaborators/existence",headers:{user_id:z.id,token:z.token},data:{game_id:a},dataType:"json",contentType:"application/json",success:function(a){return a},error:function(a){return a}})}function p(a){$.ajax({method:"POST",url:"https://forge-api.herokuapp.com/collaborators/create",headers:{user_id:z.id,token:z.token},data:{game_id:a},success:function(a){console.log(a)},error:function(a){console.log(a)}})}function q(){return $.ajax({method:"GET",url:"https://forge-api.herokuapp.com/collaborators/user/requesters",headers:{user_id:z.id,token:z.token},success:function(a){console.log("success requests",a)},error:function(a){console.log("error requests",a)}})}function r(){return $.ajax({method:"GET",url:"https://forge-api.herokuapp.com/collaborators/user/collaborators",headers:{user_id:z.id,token:z.token},dataType:"json",contentType:"application/json",success:function(a){console.log("success collaborators",a)},error:function(a){console.log("error collaborators",a)}})}function s(){return $.ajax({method:"GET",url:"https://forge-api.herokuapp.com/users/collaborations",headers:{user_id:z.id,token:z.token},dataType:"json",contentType:"application/json",success:function(a){console.log("success collaborations",a)},error:function(a){console.log("error collaborations",a)}})}function t(a,b){$.ajax({method:"PATCH",url:"https://forge-api.herokuapp.com/collaborators/update/accepted",headers:{user_id:z.id,token:z.token},data:{game_id:a,requester_id:b},success:function(a){console.log(a)},error:function(a){console.log(a)}})}function u(a,b){console.log(a,b),$.ajax({method:"PATCH",url:"https://forge-api.herokuapp.com/collaborators/update/requested",headers:{user_id:z.id,token:z.token},data:{game_id:a,requester_id:b},success:function(a){console.log(a)},error:function(a){console.log(a)}})}function v(a){$.ajax({method:"PATCH",url:"https://forge-api.herokuapp.com/collaborators/rerequest",headers:{user_id:z.id,token:z.token},data:{game_id:a},dataType:"json",contentType:"application/json",success:function(a){console.log(a)},error:function(a){console.log(a)}})}var w,x="AIzaSyCe__2EGSmwp0DR-qKGqpYwawfmRsTLBEs",y="730683845367-tjrrmvelul60250evn5i74uka4ustuln.apps.googleusercontent.com",z={uid:null,token:null,username:null,picture:null,id:null,games:null,joined:null,editGame:null},A=!1;return gapi.load("client:auth2",h),{get:c,set:d,setGameEdit:e,getGameEdit:f,getUserGames:n,validateCollabRequest:o,sendCollabRequest:p,getCollabRequests:q,getCollaborators:r,getCollaborations:s,toggleAccepted:t,toggleRequested:u,requestAgain:v,archive:g,register:m,signOut:k,signIn:j,checkLogin:b}}),angular.module("questCreator").controller("bgCtrl",function(a,b,c){function d(a,b,c,d,e,f){this.x=a,this.y=b,this.width=c,this.height=d,this.color=e,this.type=f}function e(a){m===-1&&(m=setInterval(g,100))}function f(a){m!==-1&&(clearInterval(m),m=-1)}function g(){if(l.canvasPos={x:l.myCanvas.getBoundingClientRect().left,y:l.myCanvas.getBoundingClientRect().top},v&&w.background){var a=b.editor.currentPixelSize,c=b.editor.currentPixelSize,e=b.editor.drawingCollision?"rgba(100, 100, 100, 0.5)":b.editor.currentColor;if("mouse"===u){var f=n-l.canvasPos.x,g=o-l.canvasPos.y,h=!1;if(l.allBackgroundSquares.forEach(function(a){a.x===f&&a.y===g&&(h=!0)}),!h){var i=b.editor.drawingCollision?"collision":"normal",j=new d(n-l.canvasPos.x,o-l.canvasPos.y,a,c,e,i);j.draw(),b.editor.drawingCollision?l.allCollisionSquares.push(j):l.allBackgroundSquares.push(j)}}else if("touch"===u){var i=b.editor.drawingCollision?"collision":"normal",j=new d(k.clientX-a/2-l.canvasPos.x,k.clientY-c/2-l.canvasPos.y,a,c,e,i);j.draw(),b.editor.drawingCollision?l.allCollisionSquares.push(j):l.allBackgroundSquares.push(j)}v=!1}}function h(){for(var a=0;a<l.allBackgroundSquares.length;a++){var b=l.allBackgroundSquares[a];l.draw.fillStyle=b.color,l.draw.fillRect(b.x,b.y,b.width,b.height)}}function i(){for(var a=0;a<l.allCollisionSquares.length;a++){var b=l.allCollisionSquares[a];l.draw.fillStyle=b.color,l.draw.fillRect(b.x,b.y,b.width,b.height)}}var j,k,l=this,m=-1,n=0,o=0,p=850,q=1100,r=1.4,s=2.5,t=1.6,u="",v=!1,w={background:!0},x=(b.editor.currentPixelSize,b.editor.currentPixelSize,[]),y=[];this.speedRange=5,this.currentColor=b.editor.currentColor,this.myCanvas=document.getElementById("bg-canvas"),this.canvasPos={x:l.myCanvas.getBoundingClientRect().left,y:l.myCanvas.getBoundingClientRect().top},this.draw=this.myCanvas.getContext("2d"),this.allCollisionSquares=[],this.allBackgroundSquares=[],d.prototype.draw=function(){l.draw.fillStyle=this.color,window.innerWidth<=p?l.draw.fillRect(this.x*s,this.y*t,this.width,this.height):window.innerWidth<=q?l.draw.fillRect(this.x*r,this.y/r,this.width,this.height):l.draw.fillRect(this.x,this.y,this.width,this.height)},b.$on("redrawBackground",function(a,c,d){canvasWidth=l.myCanvas.width,canvasHeight=l.myCanvas.height,l.draw.clearRect(0,0,canvasWidth,canvasHeight),l.allBackgroundSquares=[],l.allCollisionSquares=[];l.allBackgroundSquares=c,l.allCollisionSquares=d,h(),i();var e=l.myCanvas.toDataURL();b.editor.currentSceneImg={background:'url("'+e+'")'},console.log("??",b.editor.currentSceneImg)}),$("#undoBackground").click(function(){if(!b.editor.drawingCollision&&l.allBackgroundSquares.length>0){var a=l.allBackgroundSquares.pop();x.push(a)}else if(b.editor.drawingCollision&&l.allCollisionSquares.length>0){var a=l.allCollisionSquares.pop();y.push(a)}l.draw.clearRect(0,0,l.myCanvas.width,l.myCanvas.height),h(),i()}),$("#redoBackground").click(function(){if(!b.editor.drawingCollision&&x.length>0){var a=x.pop();l.allBackgroundSquares.push(a)}else if(b.editor.drawingCollision&&y.length>0){var a=y.pop();l.allCollisionSquares.push(a)}l.draw.clearRect(0,0,l.myCanvas.width,l.myCanvas.height),h(),i()}),$("#clearBackground").click(function(){canvasWidth=l.myCanvas.width,canvasHeight=l.myCanvas.height,l.draw.clearRect(0,0,canvasWidth,canvasHeight),l.allBackgroundSquares=[],l.allCollisionSquares=[]}),$("#saveBackground").click(function(){c.saveBackground(l.allBackgroundSquares,l.allCollisionSquares,b.editor.currentBackground,l.myCanvas.toDataURL()).done(function(a){console.log(a)})}),$(l.myCanvas).on("mousedown",e),$(l.myCanvas).on("mouseup",f),$(l.myCanvas).on("mouseleave",f),$(l.myCanvas).on("mousemove",function(a){newMouseX=Math.round((a.clientX-b.editor.currentPixelSize/2)/b.editor.currentPixelSize)*b.editor.currentPixelSize,newMouseY=Math.round((a.clientY-b.editor.currentPixelSize/2)/b.editor.currentPixelSize)*b.editor.currentPixelSize,newMouseX===n&&newMouseY===o||(n=newMouseX,o=newMouseY,u="mouse",j=a,v=!0)}),$(l.myCanvas).on("touchstart",e),$(l.myCanvas).on("touchend",f),$(l.myCanvas).on("touchcancel",f),$(l.myCanvas).on("touchmove",function(a){u="touch",a.preventDefault(),k=a.touches[0],v=!0})}),angular.module("questCreator").controller("chatCtrl",function(a,b){$("form").submit(function(){return console.log("Submitted!"),a.emit("chat message",$("#m").val()),$("#m").val(""),!1}),a.off("chat message"),a.on("chat message",function(a){$("#messages").append($("<li>").text(a))})}),angular.module("questCreator").controller("detailCtrl",function(a,b,c){this.playGame=function(b){a.go("main.game.play")},this.game=b.getGameDetail(),this.sendCollabRequest=function(a){console.log(a);c.validateCollabRequest(a).done(function(b){console.log(b),b.message?(c.sendCollabRequest(a),alert("Your request has been sent.")):b.requested&&!b.accepted?alert("You have already requested to be a collaborator on this game. Be patient."):b.requested||b.accepted?b.requested&&b.accepted?alert("You are already a collaborator.  Check your profile page to find and edit games for which you have been approved to collaborate."):alert("There was a problem sending this collaboration request.  Please try again later."):(alert("Okay...You have already requested to collaborate on this game and been turned down.  We will try again, but do not be annoying."),c.requestAgain(a))})},this.players=[{name:"billy badass",score:72,timeToComplete:"00:45:06"},{name:"jaime presley",score:28,timeToComplete:"incomplete"},{name:"rob helms",score:56,timeToComplete:"02:32:06"},{name:"mr. toups",score:61,timeToComplete:"01:28:15"},{name:"nate",score:36,timeToComplete:"incomplete"},{name:"fitch",score:73,timeToComplete:"03:45:04"}]}),angular.module("questCreator").controller("editorCtrl",function(a,b,c,d,e,f){var g=this;this.dragCalls=0,this.gameInfo={},this.currentEditingGame={name:d.getGameEdit(),description:"",info:this.gameInfo,tags:[],published:!1},this.currentBackground=null,this.currentObject=null,this.currentEntity=null,this.currentScene=null,this.currentLargeView="map",this.currentSmallView="object",this.availableBackgrounds=[],this.availableObjects=[],this.availableEntities=[],this.selectedAnimation="walkLeft",this.currentColor="green",this.inputColor,this.currentPixelSize=15,this.drawingCollision=!1,this.erasing=!1,this.selectingAssets=!1,this.currentFrameIndex=0,this.modeledFrameIndex=0,this.goToPalette=function(b){g.selectingAssets=!0,a.$broadcast("paletteInit",{type:b})},this.selectColor=function(){var a=/^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(g.inputColor),b=a?{r:parseInt(a[1],16),g:parseInt(a[2],16),b:parseInt(a[3],16)}:null;g.currentColor="rgb("+b.r+", "+b.g+", "+b.b+")",console.log(g.currentColor),console.log(g.inputColor)},null===this.currentEditingGame.name?(e.close(),e.open("create-game",a)):(e.close(),e.open("edit-game",a)),this.createNewGame=function(b){e.close(),c.createGame(b).done(function(b){g.currentEditingGame=b,c.getGameAssets(b.id).done(function(b){g.availableBackgrounds=b.availableBackgrounds,g.availableObjects=b.availableObstacles,g.availableEntities=b.availableEntities,g.currentBackground=g.availableBackgrounds[0]||null,a.$apply()})}),d.setGameEdit(b)},this.editGame=function(){e.close(),c.getGame(g.currentEditingGame.name).done(function(b){g.currentEditingGame=b,c.getGameAssets(b.id).done(function(b){g.availableBackgrounds=b.availableBackgrounds,g.availableObjects=b.availableObstacles,g.availableEntities=b.availableEntities,a.$apply()})}),$(".edit-game").hide()},this.saveGame=function(){c.saveGame(g.currentEditingGame).done(function(a){console.log(a)})},this.publishGame=function(){g.currentEditingGame.published=!0,this.saveGame()},this.createBackground=function(){var b="New Background",d=g.currentEditingGame.id;c.createBackground(b,d).done(function(b){g.availableBackgrounds.push(b),g.currentBackground=b,a.$apply()})},this.editBackground=function(b){g.currentBackground=b,a.$broadcast("redrawBackground",b.info.image,b.info.collisionMap)},this.createObject=function(){var b="New Object",d=g.currentEditingGame.id;c.createObject(b,d).done(function(b){g.availableObjects.push(b),g.currentObject=b,g.currentSmallView="object",a.$apply()})},this.editObject=function(b){g.currentObject=b,g.currentSmallView="object",a.$broadcast("redrawObject",b.info.image,b.info.collisionMap)},this.createEntity=function(){var b="New Entity",d=g.currentEditingGame.id;c.createEntity(b,d).done(function(b){console.log("ent",b),g.availableEntities.push(b),g.currentEntity=b,g.currentSmallView="entity",a.$apply()})},this.editEntityFrame=function(b){g.currentFrameIndex=g.modeledFrameIndex||0,g.currentEntity=b,g.currentSmallView="entity",console.log("ent:",b),console.log("frame index:",g.currentFrameIndex),console.log("selected frame:",b.info.animate[g.selectedAnimation][g.currentFrameIndex]),a.$broadcast("redrawEntity",b.info.animate[g.selectedAnimation][g.currentFrameIndex].image,b.info.animate[g.selectedAnimation][g.currentFrameIndex].collisionMap)},this.setThumbnail=function(a){return void 0===a?{background:"none"}:{background:'url("'+a.thumbnail+'")',"background-size":"contain","background-position":"center","background-repeat":"no-repeat"}},this.cancel=function(){e.close(),b.go("main.profile")},this.selectText=function(a){a.target.select()},this.uiDrag=function(){this.dragCalls++,console.log("you called this function needlessly "+this.dragCalls+" times, ya jerk!"),$(".asset.available").draggable({helper:"clone",start:function(a,b){$(b.helper).addClass("grabbed")},stop:function(a,b){$(b.helper).css({transition:"transform ease 100ms"}).removeClass("grabbed")}}),$("#scene-BG").droppable({drop:function(a,b){log("ui: ",b),log("event: ",a);var c=$(b.draggable).clone();c.draggable(),$(this).append(c)}})}}),angular.module("questCreator").controller("entCtrl",function(a,b,c){function d(a,b,c,d,e,f){this.x=a,this.y=b,this.width=c,this.height=d,this.color=e,this.type=f}function e(a){m===-1&&(m=setInterval(g,100))}function f(a){m!==-1&&(clearInterval(m),m=-1)}function g(){if(l.canvasPos={x:l.myCanvas.getBoundingClientRect().left,y:l.myCanvas.getBoundingClientRect().top},b.editor.erasing){var a=n-l.canvasPos.x,c=o-l.canvasPos.y;if(b.editor.drawingCollision){if(b.editor.drawingCollision){var e=[];l.allCollisionSquares.forEach(function(b){Math.abs(b.x-a)<10&&Math.abs(b.y-c)<10&&e.push(l.allBackgroundSquares.indexOf(b))}),e.forEach(function(a){l.allCollisionSquares.splice(a,1)})}}else{var e=[];l.allBackgroundSquares.forEach(function(b){Math.abs(b.x-a)<10&&Math.abs(b.y-c)<10&&e.push(l.allBackgroundSquares.indexOf(b))}),e.forEach(function(a){l.allBackgroundSquares.splice(a,1)})}l.draw.clearRect(0,0,l.myCanvas.width,l.myCanvas.height),h(),i()}if(v&&w.background&&!b.editor.erasing){var f=b.editor.currentPixelSize,g=b.editor.currentPixelSize,j=b.editor.drawingCollision?"rgba(100, 100, 100, 0.5)":b.editor.currentColor;if("mouse"===u){var a=n-l.canvasPos.x,c=o-l.canvasPos.y,m=!1;if(b.editor.drawingCollision?l.allCollisionSquares.forEach(function(b){b.x===a&&b.y===c&&(m=!0)}):b.editor.drawingCollision||l.allBackgroundSquares.forEach(function(b){b.x===a&&b.y===c&&(m=!0)}),!m){var p=b.editor.drawingCollision?"collision":"normal",q=new d(n-l.canvasPos.x,o-l.canvasPos.y,f,g,j,p);q.draw(),b.editor.drawingCollision?l.allCollisionSquares.push(q):l.allBackgroundSquares.push(q)}}else if("touch"===u){var p=b.editor.drawingCollision?"collision":"normal",q=new d(k.clientX-f/2-l.canvasPos.x,k.clientY-g/2-l.canvasPos.y,f,g,j,p);q.draw(),b.editor.drawingCollision?l.allCollisionSquares.push(q):l.allBackgroundSquares.push(q)}v=!1}}function h(){for(var a=0;a<l.allBackgroundSquares.length;a++){var b=l.allBackgroundSquares[a];l.draw.fillStyle=b.color,l.draw.fillRect(b.x,b.y,b.width,b.height)}}function i(){for(var a=0;a<l.allCollisionSquares.length;a++){var b=l.allCollisionSquares[a];l.draw.fillStyle=b.color,l.draw.fillRect(b.x,b.y,b.width,b.height)}}var j,k,l=this,m=-1,n=0,o=0,p=850,q=1100,r=1.4,s=2.5,t=1.6,u="",v=!1,w={background:!0},x=(b.editor.currentPixelSize,b.editor.currentPixelSize,[]),y=[];this.speedRange=5,this.currentColor=b.editor.currentColor,this.myCanvas=document.getElementById("ent-canvas"),this.canvasPos={x:l.myCanvas.getBoundingClientRect().left,y:l.myCanvas.getBoundingClientRect().top},this.draw=this.myCanvas.getContext("2d"),this.allCollisionSquares=[],this.allBackgroundSquares=[],d.prototype.draw=function(){l.draw.fillStyle=this.color,window.innerWidth<=p?l.draw.fillRect(this.x*s,this.y*t,this.width,this.height):window.innerWidth<=q?l.draw.fillRect(this.x*r,this.y/r,this.width,this.height):l.draw.fillRect(this.x,this.y,this.width,this.height)},b.$on("redrawEntity",function(a,b,c){canvasWidth=l.myCanvas.width,canvasHeight=l.myCanvas.height,l.draw.clearRect(0,0,canvasWidth,canvasHeight),l.allBackgroundSquares=[],l.allCollisionSquares=[];l.allBackgroundSquares=b,l.allCollisionSquares=c,h(),i()}),$("#undoEntity").click(function(){if(!b.editor.drawingCollision&&l.allBackgroundSquares.length>0){var a=l.allBackgroundSquares.pop();x.push(a)}else if(b.editor.drawingCollision&&l.allCollisionSquares.length>0){var a=l.allCollisionSquares.pop();y.push(a)}l.draw.clearRect(0,0,l.myCanvas.width,l.myCanvas.height),h(),i()}),$("#redoEntity").click(function(){if(!b.editor.drawingCollision&&x.length>0){var a=x.pop();l.allBackgroundSquares.push(a)}else if(b.editor.drawingCollision&&y.length>0){var a=y.pop();l.allCollisionSquares.push(a)}l.draw.clearRect(0,0,l.myCanvas.width,l.myCanvas.height),h(),i()}),$("#clearEntity").click(function(){canvasWidth=l.myCanvas.width,canvasHeight=l.myCanvas.height,l.draw.clearRect(0,0,canvasWidth,canvasHeight),l.allBackgroundSquares=[],l.allCollisionSquares=[]}),$("#saveEntity").click(function(){c.saveEntity(l.allBackgroundSquares,l.allCollisionSquares,b.editor.currentEntity,b.editor.selectedAnimation,b.editor.currentFrameIndex,l.myCanvas.toDataURL()).done(function(a){console.log("After save:",a)})}),$("#copyEntity").click(function(){c.copy(l.allBackgroundSquares,l.allCollisionSquares)}),$("#pasteEntity").click(function(){if(b.editor.drawingCollision){if(b.editor.drawingCollision){var a=c.paste("collision");l.allCollisionSquares.push.apply(l.allCollisionSquares,a);
}}else{var d=c.paste("image");l.allBackgroundSquares.push.apply(l.allBackgroundSquares,d)}l.draw.clearRect(0,0,l.myCanvas.width,l.myCanvas.height),h(),i()}),$(l.myCanvas).on("mousedown",e),$(l.myCanvas).on("mouseup",f),$(l.myCanvas).on("mouseleave",f),$(l.myCanvas).on("mousemove",function(a){newMouseX=Math.round((a.clientX-b.editor.currentPixelSize/2)/b.editor.currentPixelSize)*b.editor.currentPixelSize,newMouseY=Math.round((a.clientY-b.editor.currentPixelSize/2)/b.editor.currentPixelSize)*b.editor.currentPixelSize,newMouseX===n&&newMouseY===o||(n=newMouseX,o=newMouseY,u="mouse",j=a,v=!0)}),$(l.myCanvas).on("touchstart",e),$(l.myCanvas).on("touchend",f),$(l.myCanvas).on("touchcancel",f),$(l.myCanvas).on("touchmove",function(a){u="touch",a.preventDefault(),k=a.touches[0],v=!0})}),angular.module("questCreator").controller("gameCtrl",function(a,b,c){}),angular.module("questCreator").controller("landingCtrl",function(a,b,c,d){this.searching=!1;this.allGames=d.getGames().done(function(a){b.$apply()}),b.createGame=function(){var d=c.get();d.id?(d.editGame=null,c.set(d),a.go("main.game.editor.views")):(alert("Please Sign In or Register."),b.signIn())},b.goToGameDetail=function(b){d.setGameDetail(b),a.go("main.game.detail")},this.searchGames=function(a){this.searching=!0,this.allGames=d.searchGames(a).done(function(a){b.$apply()})},this.showAll=function(){this.searching=!1,this.allGames=d.getGames().done(function(a){b.$apply()})}}),angular.module("questCreator").controller("mainCtrl",function(a,b,c,d,e){this.goHome=function(){b.go("main.landing")},this.goToUser=function(){c.get().id?b.go("main.profile"):(alert("You must login to see your profile page."),e.signIn())},e.signIn=function(){c.signIn()},this.signOut=function(){c.signOut();var a={uid:null,token:null,username:null,picture:null,id:null,games:null,joined:null,editGame:null};c.set(a),b.go("main.landing")},this.register=function(a){c.register(a)},this.cancel=function(){$("#user-popup").css("display","none"),c.signOut()}}),angular.module("questCreator").controller("mapCtrl",function(a,b){this.width=1,this.height=1,this.createMap=function(){var a="new map",c="new scene";console.log("Creating a map!",a);var d={name:c,background:null,objects:[],entities:[]},e={name:a,scenes:[[d]]};b.editor.currentEditingGame.info.maps.push(e)},this.createMapRow=function(a){var c="new scene",d={name:c,background:null,objects:[],entities:[]};b.editor.currentEditingGame.info.maps[b.editor.currentEditingGame.info.maps.indexOf(a)].scenes.push([d])},this.createScene=function(a,c){var d="new scene",e={name:d,background:null,objects:[],entities:[]};console.log("Creating a scene!",a,c,d),b.editor.currentEditingGame.info.maps[b.editor.currentEditingGame.info.maps.indexOf(a)].scenes[c].push(e)},this.editScene=function(a){console.log(a),b.editor.currentScene=a,b.editor.currentLargeView="scene"}}),angular.module("questCreator").controller("objCtrl",function(a,b,c){function d(a,b,c,d,e,f){this.x=a,this.y=b,this.width=c,this.height=d,this.color=e,this.type=f}function e(a){m===-1&&(m=setInterval(g,100))}function f(a){m!==-1&&(clearInterval(m),m=-1)}function g(){if(l.canvasPos={x:l.myCanvas.getBoundingClientRect().left,y:l.myCanvas.getBoundingClientRect().top},v&&w.background){var a=b.editor.currentPixelSize,c=b.editor.currentPixelSize,e=b.editor.drawingCollision?"rgba(100, 100, 100, 0.5)":b.editor.currentColor;if("mouse"===u){var f=n-l.canvasPos.x,g=o-l.canvasPos.y,h=!1;if(l.allBackgroundSquares.forEach(function(a){a.x===f&&a.y===g&&(h=!0)}),!h){var i=b.editor.drawingCollision?"collision":"normal",j=new d(n-l.canvasPos.x,o-l.canvasPos.y,a,c,e,i);j.draw(),b.editor.drawingCollision?l.allCollisionSquares.push(j):l.allBackgroundSquares.push(j)}}else if("touch"===u){var i=b.editor.drawingCollision?"collision":"normal",j=new d(k.clientX-a/2-l.canvasPos.x,k.clientY-c/2-l.canvasPos.y,a,c,e,i);j.draw(),b.editor.drawingCollision?l.allCollisionSquares.push(j):l.allBackgroundSquares.push(j)}v=!1}}function h(){for(var a=0;a<l.allBackgroundSquares.length;a++){var b=l.allBackgroundSquares[a];l.draw.fillStyle=b.color,l.draw.fillRect(b.x,b.y,b.width,b.height)}}function i(){for(var a=0;a<l.allCollisionSquares.length;a++){var b=l.allCollisionSquares[a];l.draw.fillStyle=b.color,l.draw.fillRect(b.x,b.y,b.width,b.height)}}var j,k,l=this,m=-1,n=0,o=0,p=850,q=1100,r=1.4,s=2.5,t=1.6,u="",v=!1,w={background:!0},x=(b.editor.currentPixelSize,b.editor.currentPixelSize,[]),y=[];this.speedRange=5,this.currentColor=b.editor.currentColor,this.myCanvas=document.getElementById("obj-canvas"),this.canvasPos={x:l.myCanvas.getBoundingClientRect().left,y:l.myCanvas.getBoundingClientRect().top},this.draw=this.myCanvas.getContext("2d"),this.allCollisionSquares=[],this.allBackgroundSquares=[],d.prototype.draw=function(){l.draw.fillStyle=this.color,window.innerWidth<=p?l.draw.fillRect(this.x*s,this.y*t,this.width,this.height):window.innerWidth<=q?l.draw.fillRect(this.x*r,this.y/r,this.width,this.height):l.draw.fillRect(this.x,this.y,this.width,this.height)},b.$on("redrawObject",function(a,b,c){canvasWidth=l.myCanvas.width,canvasHeight=l.myCanvas.height,l.draw.clearRect(0,0,canvasWidth,canvasHeight),l.allBackgroundSquares=[],l.allCollisionSquares=[];l.allBackgroundSquares=b,l.allCollisionSquares=c,h(),i()}),$("#undoObject").click(function(){if(!b.editor.drawingCollision&&l.allBackgroundSquares.length>0){var a=l.allBackgroundSquares.pop();x.push(a)}else if(b.editor.drawingCollision&&l.allCollisionSquares.length>0){var a=l.allCollisionSquares.pop();y.push(a)}l.draw.clearRect(0,0,l.myCanvas.width,l.myCanvas.height),h(),i()}),$("#redoObject").click(function(){if(!b.editor.drawingCollision&&x.length>0){var a=x.pop();l.allBackgroundSquares.push(a)}else if(b.editor.drawingCollision&&y.length>0){var a=y.pop();l.allCollisionSquares.push(a)}l.draw.clearRect(0,0,l.myCanvas.width,l.myCanvas.height),h(),i()}),$("#clearObject").click(function(){canvasWidth=l.myCanvas.width,canvasHeight=l.myCanvas.height,l.draw.clearRect(0,0,canvasWidth,canvasHeight),l.allBackgroundSquares=[],l.allCollisionSquares=[]}),$("#saveObject").click(function(){c.saveObject(l.allBackgroundSquares,l.allCollisionSquares,b.editor.currentObject,l.myCanvas.toDataURL()).done(function(a){console.log(a)})}),$(l.myCanvas).on("mousedown",e),$(l.myCanvas).on("mouseup",f),$(l.myCanvas).on("mouseleave",f),$(l.myCanvas).on("mousemove",function(a){newMouseX=Math.round((a.clientX-b.editor.currentPixelSize/2)/b.editor.currentPixelSize)*b.editor.currentPixelSize,newMouseY=Math.round((a.clientY-b.editor.currentPixelSize/2)/b.editor.currentPixelSize)*b.editor.currentPixelSize,newMouseX===n&&newMouseY===o||(n=newMouseX,o=newMouseY,u="mouse",j=a,v=!0)}),$(l.myCanvas).on("touchstart",e),$(l.myCanvas).on("touchend",f),$(l.myCanvas).on("touchcancel",f),$(l.myCanvas).on("touchmove",function(a){u="touch",a.preventDefault(),k=a.touches[0],v=!0})}),angular.module("questCreator").controller("paletteCtrl",function(a,b){var c=this;this.elements=[],this.currentType="",b.$on("paletteInit",function(d,e){a.getByType(e.type).then(function(d){c.assets=d,b.$apply(),c.currentType=a.getCurrentType(),b.$apply()}),c.searchByTag=function(d){a.getByTag(d).done(function(a){c.assets=a,b.$apply()})},c.goToEditor=function(){if(c.elements.length>0){var d=confirm("Do you wanna save the assets you chose before leaving this screen?");d&&a.saveToPalette(c.elements)}b.editor.selectingAssets=!1},c.addToPalette=function(a){c.elements.push(a)},c.saveElements=function(){var a=null;return"backgrounds"===c.currentType?(a=b.editor.availableBackgrounds.concat(c.elements),b.editor.availableBackgrounds=a):"obstacles"===c.currentType?(a=b.editor.availableObjects.concat(c.elements),b.editor.availableObjects=a):"entities"===c.currentType&&(a=b.editor.availableEntities.concat(c.elements),b.editor.availableEntities=a),console.log(a),c.elements=[],c.elements}})}),angular.module("questCreator").controller("playCtrl",function(a,b,c,d,e,f,g,h,i){function j(){var a={name:"Avatar Test",info:{pos:{x:100,y:250},speed:{mag:3,x:0,y:0},animate:{walkLeft:[[{x:100,y:100,width:30,height:30,color:"blue"},{x:110,y:150,width:30,height:30,color:"green"}],[{x:110,y:100,width:30,height:30,color:"blue"},{x:100,y:150,width:30,height:30,color:"green"}]],walkRight:[[{x:150,y:100,width:30,height:30,color:"blue"},{x:140,y:150,width:30,height:30,color:"green"}],[{x:140,y:100,width:30,height:30,color:"blue"},{x:150,y:150,width:30,height:30,color:"green"}]],walkUp:[[{x:100,y:110,width:30,height:30,color:"red"},{x:150,y:100,width:30,height:30,color:"yellow"}],[{x:100,y:100,width:30,height:30,color:"red"},{x:150,y:110,width:30,height:30,color:"yellow"}]],walkDown:[[{x:100,y:140,width:30,height:30,color:"red"},{x:150,y:150,width:30,height:30,color:"yellow"}],[{x:100,y:150,width:30,height:30,color:"red"},{x:150,y:140,width:30,height:30,color:"yellow"}]],swimLeft:[[{x:100,y:100,width:30,height:30,color:"lightblue"},{x:150,y:150,width:30,height:30,color:"lightblue"}],[{x:100,y:100,width:30,height:30,color:"gray"},{x:150,y:150,width:30,height:30,color:"gray"}]],swimRight:[[{x:100,y:100,width:30,height:30,color:"lightblue"},{x:150,y:150,width:30,height:30,color:"lightblue"}],[{x:100,y:100,width:30,height:30,color:"gray"},{x:150,y:150,width:30,height:30,color:"gray"}]],swimUp:[[{x:100,y:100,width:30,height:30,color:"lightblue"},{x:150,y:150,width:30,height:30,color:"lightblue"}],[{x:100,y:100,width:30,height:30,color:"gray"},{x:150,y:150,width:30,height:30,color:"gray"}]],swimDown:[[{x:100,y:100,width:30,height:30,color:"lightblue"},{x:150,y:150,width:30,height:30,color:"lightblue"}],[{x:100,y:100,width:30,height:30,color:"gray"},{x:150,y:150,width:30,height:30,color:"gray"}]]},collisionMap:[{x:100,y:180,width:80,height:10,color:"gray"},{x:100,y:185,width:80,height:10,color:"gray"}]},current:!1},c={user_id:f.get().id,token:f.get().token};$.ajax({method:"POST",url:"https://forge-api.herokuapp.com/characters/create",headers:c,data:JSON.stringify(a),dataType:"json",contentType:"application/json",success:function(a){J=new b(a),J.info.currentFrame=J.info.animate.walkLeft[0],N=!0,setInterval(s,75)},error:function(a){console.log(a)}})}function k(a){a.includes("look")?G.phrase="This is a description of your current scene. I hope it's helpful.":G.phrase="I don't understand that.",$(".dialog").text(G.phrase).show(),G.show=!0,I=!0}function l(){var a=J.info.collisionMap[0].x,b=J.info.collisionMap[0].x+J.info.collisionMap[0].width,c=J.info.collisionMap[0].y,d=J.info.collisionMap[0].y+J.info.collisionMap[0].height;J.info.collisionMap.forEach(function(e){e.x<a&&(a=e.x),e.x+e.width>b&&(b=e.x+e.width),e.y<c&&(c=e.y),e.y+e.height>d&&(d=e.y+e.height)}),J.bounds={left:a+J.info.pos.x,right:b+J.info.pos.x,top:c+J.info.pos.y,bottom:d+J.info.pos.y,width:b-a,height:d-c},J.bounds.right<0?(z.currentScenePos[2]--,z.currentScenePos[2]<0&&(z.currentScenePos[2]=z.currentRow.length-1),o(),J.info.pos.x+=D):J.bounds.left>D?(z.currentScenePos[2]++,z.currentScenePos[2]>z.currentRow.length-1&&(z.currentScenePos[2]=0),o(),J.info.pos.x-=D):J.bounds.bottom<0?(z.currentScenePos[1]--,z.currentScenePos[1]<0&&(z.currentScenePos[1]=z.allRows.length-1),o(),J.info.pos.y+=E):J.bounds.top>E&&(z.currentScenePos[1]++,z.currentScenePos[1]>z.allRows.length-1&&(z.currentScenePos[1]=0),o(),J.info.pos.y-=E)}function m(){var a={found:!1,direction:"none",type:"none"};if(J.info.collisionMap.forEach(function(b){var c=b.x+J.info.pos.x,d=b.x+b.width+J.info.pos.x,e=b.y+J.info.pos.y,f=b.y+b.height+J.info.pos.y;K&&K.info.collisionMap.forEach(function(b){var g=b.x,h=b.x+b.width,i=b.y,j=b.y+b.height;c<=h&&d>=g&&e<=j&&f>=i&&(a.found=!0,a.type="wall",J.info.speed.x>0?a.direction="right":J.info.speed.x<0?a.direction="left":J.info.speed.y<0?a.direction="up":J.info.speed.y>0&&(a.direction="down"))}),L&&L.forEach(function(b){if(b.info.collisionMap[0]){var g=b.info.collisionMap[0].x,h=b.info.collisionMap[0].x+b.info.collisionMap[0].width,i=b.info.collisionMap[0].y,j=b.info.collisionMap[0].y+b.info.collisionMap[0].height;b.info.collisionMap.forEach(function(a){a.x<g&&(g=a.x),a.x+a.width>h&&(h=a.x+a.width),a.y<i&&(i=a.y),a.y+a.height>j&&(j=a.y+a.height)}),b.bounds={left:g+b.info.pos.x,right:h+b.info.pos.x,top:i+b.info.pos.y,bottom:j+b.info.pos.y,width:h-g,height:j-i}}b.info.collisionMap.forEach(function(g){var h=g.x+b.info.pos.x,i=g.x+g.width+b.info.pos.x,j=g.y+b.info.pos.y,k=g.y+g.height+b.info.pos.y;c<=i&&d>=h&&e<=k&&f>=j&&(a.found=!0,a.type="wall",J.info.speed.x>0?a.direction="right":J.info.speed.x<0?a.direction="left":J.info.speed.y<0?a.direction="up":J.info.speed.y>0&&(a.direction="down"))})}),M&&M.forEach(function(b){if(b.info.currentFrame.collisionMap[0]){var g=b.info.currentFrame.collisionMap[0].x,h=b.info.currentFrame.collisionMap[0].x+b.info.currentFrame.collisionMap[0].width,i=b.info.currentFrame.collisionMap[0].y,j=b.info.currentFrame.collisionMap[0].y+b.info.currentFrame.collisionMap[0].height;b.info.currentFrame.collisionMap.forEach(function(a){a.x<g&&(g=a.x),a.x+a.width>h&&(h=a.x+a.width),a.y<i&&(i=a.y),a.y+a.height>j&&(j=a.y+a.height)}),b.bounds={left:g+b.info.pos.x,right:h+b.info.pos.x,top:i+b.info.pos.y,bottom:j+b.info.pos.y,width:h-g,height:j-i}}b.info.currentFrame.collisionMap.forEach(function(g){var h=g.x+b.info.pos.x,i=g.x+g.width+b.info.pos.x,j=g.y+b.info.pos.y,k=g.y+g.height+b.info.pos.y;c<=i&&d>=h&&e<=k&&f>=j&&(a.found=!0,a.type="wall",J.info.speed.x>0?a.direction="right":J.info.speed.x<0?a.direction="left":J.info.speed.y<0?a.direction="up":J.info.speed.y>0&&(a.direction="down"))})})}),a.found){switch(console.log("Avatar Collided!"),a.type){case"wall":J.collide(a.direction)}a={found:!1,direction:"none",type:"none"}}}function n(){M&&M.forEach(function(a){var b={found:!1,direction:"none",type:"none"};if(a.info.currentFrame.collisionMap.forEach(function(c){var d=c.x+a.info.pos.x,e=c.x+c.width+a.info.pos.x,f=c.y+a.info.pos.y,g=c.y+c.height+a.info.pos.y;K&&K.info.collisionMap.forEach(function(c){var h=c.x,i=c.x+c.width,j=c.y,k=c.y+c.height;d<=i&&e>=h&&f<=k&&g>=j&&(b.found=!0,b.type="wall",a.info.speed.x>0?b.direction="right":a.info.speed.x<0?b.direction="left":a.info.speed.y<0?b.direction="up":a.info.speed.y>0&&(b.direction="down"))}),L&&L.forEach(function(c){if(c.info.collisionMap[0]){var h=c.info.collisionMap[0].x,i=c.info.collisionMap[0].x+c.info.collisionMap[0].width,j=c.info.collisionMap[0].y,k=c.info.collisionMap[0].y+c.info.collisionMap[0].height;c.info.collisionMap.forEach(function(a){a.x<h&&(h=a.x),a.x+a.width>i&&(i=a.x+a.width),a.y<j&&(j=a.y),a.y+a.height>k&&(k=a.y+a.height)}),c.bounds={left:h+c.info.pos.x,right:i+c.info.pos.x,top:j+c.info.pos.y,bottom:k+c.info.pos.y,width:i-h,height:k-j}}c.info.collisionMap.forEach(function(h){var i=h.x+c.info.pos.x,j=h.x+h.width+c.info.pos.x,k=h.y+c.info.pos.y,l=h.y+h.height+c.info.pos.y;d<=j&&e>=i&&f<=l&&g>=k&&(b.found=!0,b.type="wall",a.info.speed.x>0?b.direction="right":a.info.speed.x<0?b.direction="left":a.info.speed.y<0?b.direction="up":a.info.speed.y>0&&(b.direction="down"))})})}),b.found){switch(b.type){case"wall":a.collide(b.direction)}b={found:!1,direction:"none",type:"none"}}})}function o(){z.currentMap=Q[z.currentScenePos[0]],z.allRows=z.currentMap.scenes,z.currentRow=z.allRows[z.currentScenePos[1]],z.currentScene=z.currentRow[z.currentScenePos[2]],K=z.currentScene.background,L=z.currentScene.objects,p()}function p(){M=[];var a=z.currentScene.entities;a.forEach(function(a){var b=new e(a);M.push(b)}),O=!0}function q(){J.updatePos()}function r(){M.forEach(function(a){a.updatePos()})}function s(){J.info.currentFrameIndex=J.info.currentFrameIndex||0,"walkLeft"!==J.action&&"walkUp"!==J.action&&"walkRight"!==J.action&&"walkDown"!==J.action||(J.info.currentFrameIndex>J.info.animate[J.action].length-1&&(J.info.currentFrameIndex=0),J.info.currentFrame=J.info.animate[J.action][J.info.currentFrameIndex],J.info.currentFrameIndex++)}function t(){C.save(),C.translate(J.info.pos.x,J.info.pos.y),J.info.currentFrame.forEach(function(a){C.fillStyle=a.color,C.fillRect(a.x,a.y,a.width,a.height)}),C.globalAlpha=.2,J.info.collisionMap.forEach(function(a){C.fillStyle=a.color,C.fillRect(a.x,a.y,a.width,a.height)}),C.restore()}function u(){if(K){C.save(),C.globalCompositeOperation="destination-over";for(var a=K.info.image.length-1;a>=0;a--){var b=K.info.image[a];C.fillStyle=b.color,C.fillRect(b.x,b.y,b.width,b.height)}C.globalCompositeOperation="source-over",C.globalAlpha=.2,K.info.collisionMap.forEach(function(a){C.fillStyle=a.color,C.fillRect(a.x,a.y,a.width,a.height)}),C.restore()}else z.warning="This scene has no background yet!",setTimeout(function(){z.warning=""},2e3);i.$apply()}function v(a){L.forEach(function(b){C.save(),C.translate(b.info.pos.x,b.info.pos.y),(J.bounds.top>b.bounds.bottom&&"background"===a||J.bounds.top<b.bounds.bottom&&"foreground"===a)&&(b.info.image.forEach(function(a){C.fillStyle=a.color,C.fillRect(a.x,a.y,a.width,a.height)}),C.globalAlpha=.2,b.info.collisionMap.forEach(function(a){C.fillStyle=a.color,C.fillRect(a.x,a.y,a.width,a.height)})),C.restore()})}function w(a){M.forEach(function(b){b.checkAction(),C.save(),C.translate(b.info.pos.x,b.info.pos.y),b.bounds?(J.bounds.top>b.bounds.bottom&&"background"===a||J.bounds.top<b.bounds.bottom&&"foreground"===a)&&(b.info.currentFrame.image.forEach(function(a){C.fillStyle=a.color,C.fillRect(a.x,a.y,a.width,a.height)}),C.globalAlpha=.2,b.info.currentFrame.collisionMap.forEach(function(a){C.fillStyle=a.color,C.fillRect(a.x,a.y,a.width,a.height)})):"background"===a&&(b.info.currentFrame.image.forEach(function(a){C.fillStyle=a.color,C.fillRect(a.x,a.y,a.width,a.height)}),C.globalAlpha=.2,b.info.currentFrame.collisionMap.forEach(function(a){C.fillStyle=a.color,C.fillRect(a.x,a.y,a.width,a.height)})),C.restore()})}function x(){C.clearRect(0,0,D,E)}function y(){z.gameStarted&&(x(),N&&(l(),m(),n(),q(),r(),w("background"),v("background"),t(),w("foreground"),v("foreground"),u())),requestAnimationFrame(y)}var z=this,A={userId:f.get().id},B=document.getElementById("play-canvas"),C=B.getContext("2d"),D=700,E=500;this.warning="";var F={show:!1,phrase:""},G={show:!1,phrase:""},H={show:!1,contents:""},I=!1,J=(new Date,null),K=null,L=null,M=null,N=!1,O=!1;this.gameToPlay=g.getGameDetail().name;var P=null,Q=null;this.currentMap=null,this.allRows=null,this.currentRow=null,this.currentScene=null,this.currentScenePos=[0,0,0],this.gameLoaded=!1,this.gameStarted=!1;g.loadGame(z.gameToPlay).done(function(a){z.gameLoaded=!0,P=a.info,Q=P.maps,z.currentMap=Q[0],z.allRows=z.currentMap.scenes,z.currentRow=z.allRows[0],z.currentScene=z.currentRow[0],K=z.currentScene.background,u(),i.$apply()});$("body").off("keyup").on("keyup",function(a){var b=a.which;37===b?(J.action="walkLeft"===J.action?"stand":"walkLeft",J.info.speed.x=J.info.speed.x===-1*J.info.speed.mag?0:-1*J.info.speed.mag,J.info.speed.y=0):38===b?(J.action="walkUp"===J.action?"stand":"walkUp",J.info.speed.x=0,J.info.speed.y=J.info.speed.y===-1*J.info.speed.mag?0:-1*J.info.speed.mag):39===b?(J.action="walkRight"===J.action?"stand":"walkRight",J.info.speed.x=J.info.speed.x===J.info.speed.mag?0:J.info.speed.mag,J.info.speed.y=0):40===b&&(J.action="walkDown"===J.action?"stand":"walkDown",J.info.speed.x=0,J.info.speed.y=J.info.speed.y===J.info.speed.mag?0:J.info.speed.mag)}),$("body").off("keypress").on("keypress",function(a){var b=a.which;if(F.show&&b>=32&&b<=220&&!G.show&&0===$(".active").length){I=!0;var c=String.fromCharCode(b);F.phrase+=c,$(".typing").text(F.phrase)}else if(13===b){if(F.show){F.show=!1,$(".typing").hide();var d=F.phrase;F.phrase="",k(d)}else G.show?(G.show=!1,$(".dialog").hide(),G.phrase=""):H.show;G.show||H.show||0!==$(".active").length||(I=!1)}else 32===b&&(F.show||(F.phrase=">",F.show=!0,$(".typing").text(F.phrase).show()))}),this.startGame=function(){z.currentScenePos=[1,0,0],o(),j(),z.gameStarted=!0},requestAnimationFrame(y);var R,S=[];a.emit("game joined");var T;a.off("create character"),a.on("create character",function(b){R=b;var c={};S.push(c),a.emit("send new player",c),T=setInterval(function(){playerUpdate={},S.forEach(function(a,c){a.id===b&&(S[c]=playerUpdate)}),a.emit("player update",playerUpdate)},20)}),a.off("old player found"),a.on("old player found",function(a){console.log("Found old player"),S.push(a)}),a.off("new player joining"),a.on("new player joining",function(b){var c={oldCharInfo:charInfo,id:b.id};S.push(b),a.emit("send old player",c)}),a.off("updating player"),a.on("updating player",function(a){}),a.off("player left"),a.on("player left",function(a){console.log("Player left!"),S.forEach(function(b,c){b.id===a})}),i.$on("$destroy",function(){a.emit("game left"),clearInterval(T)}),$(".chat-submit").submit(function(){return a.emit("chat message",$(".message").val()),$(".message").val(""),!1}),a.off("chat message"),a.on("chat message",function(a){$(".chat-messages").append($("<li>").text(A.userId+": "+a))})}),angular.module("questCreator").controller("profileCtrl",function(a,b,c,d){d.checkLogin().then(function(a){c.games=null,c.requests=null,c.user=d.get(),c.getJoinedDate=function(a){return new Date(a)},d.getUserGames().done(function(a){c.games=a,c.$apply(),d.getCollabRequests().done(function(b){for(var d=0;d<b.length;d++)for(var e=0;e<a.length;e++)b[d].game_id===a[e].id&&(b[d].gameName=a[e].name);c.requests=b,c.$apply()}),d.getCollaborators().done(function(b){for(var d=b.length-1;d>=0;d--){console.log(b[d].id,c.user.id),b[d].user_id===c.user.id&&b.splice(d,1);for(var e=0;e<a.length;e++)b[d].game_id===a[e].id&&(b[d].gameName=a[e].name)}c.collaborators=b,c.$apply()})}),d.getCollaborations().done(function(a){c.collaborations=a,c.$apply()}),c.createGame=function(){c.user.editGame=null,d.set(c.user),b.go("main.game.editor.views")},c.editGame=function(a){c.user.editGame=a,d.set(c.user),b.go("main.game.editor.views")},c.archiveGame=function(a){var b=confirm("Are you sure you wanna archive '"+a.name+"'? That means no one will be able to play it and all player information will be lost. You will NOT be able to retrieve this later");b&&(d.archive(a.id),d.getUserGames().done(function(a){c.games=a,c.$apply()}))},c.showCollaborators=function(){},c.showRequests=function(){},c.toggleCollab=function(a){d.toggleAccepted(a.game_id,a.user_id)},c.removeRequest=function(a){d.toggleRequested(a.game_id,a.user_id)},c.removeCollaborator=function(a){d.toggleRequested(a.game_id,a.user_id),d.toggleAccepted(a.game_id,a.user_id)}})}),angular.module("questCreator").controller("sceneCtrl",function(a,b,c){var d=this;this.selecting={background:!1,object:!1,entity:!1},this.selectedObject=null,this.selectedEntity=null,this.selectBackground=function(a){console.log(a),c.editor.currentScene.background=a,d.selecting.background=!1},this.selectObject=function(a){a&&(console.log(a),c.editor.currentScene.objects.push(a),d.selecting.object=!1)},this.selectEntity=function(a){a&&(console.log(c.editor.currentScene.entities),c.editor.currentScene.entities.push(a),console.log(c.editor.currentScene.entities),d.selecting.entity=!1)},this.saveScene=function(a){console.log("Turns out saving is unnecessary here. Here's the game as proof."),console.log(c.editor.currentEditingGame)}}),angular.module("questCreator").controller("scriptsCtrl",function(a){});var headerData,testData,testData,testData,testData;